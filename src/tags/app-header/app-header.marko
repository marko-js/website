import * as footerStyles from "../app-footer/app-footer.style.module.scss";
import * as styles from "./app-header.style.module.scss";

let/mobileMenu=false
script -- document.documentElement.classList.toggle("show-mobile-menu", mobileMenu);

header#header
  a#${styles.logo} title="Home" href="/"
    picture 
      source srcset="/logo.svg#dark" media="(prefers-color-scheme:dark)"
      img alt="Marko Logo" src="/logo.svg"
  
  .${styles.pageLinks}
    a href="/docs" -- Docs
    a href="/playground" -- Playground
    a href="https://github.com/marko-js/marko" -- GitHub

  button#${styles.hamburger}
    ,onClick() { mobileMenu = !mobileMenu }
    ,aria-pressed=mobileMenu ? "true" : "false"
    ,aria-label=`${mobileMenu ? "Hide" : "Show"} menu`

  #${styles.docsearch} onClick() { mobileMenu = false }
    button disabled aria-hidden="true"

script --
  onLoad(async () => {
    if ("ScrollTimeline" in window) {
      setupStickyScroll();
    }

    const docsearch = (await import("./docsearch")).default;
    docsearch({
      container: document.getElementById(styles.docsearch)!,
      indexName: "next_markojs_com_sntinmu31f_pages",
      placeholder: "",
      appId: "SNTINMU31F",
      apiKey: "6023164bfb0f58c658ba43d13b5e2eab",
    });
  });


static function onLoad(cb: () => void) {
  if (document.readyState === "interactive") {
    cb();
  } else {
    document.addEventListener("DOMContentLoaded", cb);
  }
}

static function setupStickyScroll() {
  const vp = visualViewport!;
  const html = document.documentElement;
  const header = document.getElementById("header")!;
  const footer = document.getElementById(footerStyles.footer)!;
  let stickTop = 0;
  let prevY = window.scrollY;
  let prevUp: boolean | undefined;
  window.addEventListener(
    "scroll",
    () => {
      const y = window.scrollY;
      const up = y < prevY;
      if (prevY === (prevY = y)) return;
      if (y > 0) {
        if (prevUp === (prevUp = up)) return;
      } else {
        stickTop = 0;
      }

      const stickSize = header.offsetHeight;
      const stickMax = Math.max(0, html.scrollHeight - vp.height - stickSize - (footer.offsetHeight * 2));
      stickTop = up
        ? Math.max(0, stickTop, Math.min(stickMax, y - stickSize))
        : Math.min(stickMax, stickTop, y);
      html.style.setProperty("--stick-top", `${stickTop}px`);
      html.classList.toggle("scrolled", stickTop > 0);
    },
    { passive: true },
  );
}
