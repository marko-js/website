import * as styles from "./split-pages.style.module.scss";

export interface Pane extends Marko.HTML.Div {}
export interface Input {
  first: Marko.AttrTag<Pane>;
  second: Marko.AttrTag<Pane>;
}

const/{ first, second }=input
let/editorSize=0.5
let-match-media/isVertical="(max-aspect-ratio: 1/1)"

.${styles.panes}/container
  div ...first style=[first.style, { "flex-grow": editorSize }]
    ${first.content}
  button.${styles.divider}
    ,aria-label="resize display panes"
    ,onPointerDown(e) {
      (e.target as HTMLButtonElement).setPointerCapture(e.pointerId);
    }
    ,onPointerMove(e) {
      if ((e.target as HTMLButtonElement).hasPointerCapture(e.pointerId)) {
        const rect = container().getBoundingClientRect();
        const fraction = isVertical
          ? (e.clientY - rect.top) / rect.height
          : (e.clientX - rect.left) / rect.width;
        editorSize = Math.min(0.8, Math.max(0.2, fraction));
      }
    }
    ,onPointerUp(e) {
      (e.target as HTMLButtonElement).releasePointerCapture(e.pointerId);
    }
    ,onPointerCancel(e) {
      (e.target as HTMLButtonElement).releasePointerCapture(e.pointerId);
    }
  div ...second style=[first.style, { "flex-grow": 1 - editorSize }]
    ${second.content}
