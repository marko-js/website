import type { PlaygroundFile } from "../../playground.marko";

static const previewTypes: Record<string, {
  render?: boolean;
  output: "dom" | "html" | "hydrate" | "ast";
}> = {
  "Preview": {
    output: "dom",
    render: true,
  },
  "Compiled (HTML)": {
    output: "html",
    render: false,
  },
  "Compiled (DOM)": {
    output: "dom",
    render: false,
  },
  "AST": {
    output: "ast",
  }
};
export interface Input {
  files: PlaygroundFile[];
  selected: number;
}

let/previewType="Preview"

.output
  .output-header
    select value:=previewType
      for|option| in=previewTypes
        option -- ${option}
  .output-content
    if=previewTypes[previewType].output === "ast"
      render-ast=input.files selected=input.selected
    else if=input.files.length
      render-files=input.files
        ,selected=input.selected
        ,render=previewTypes[previewType].render
        ,output=previewTypes[previewType].output

style --
  .output {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .output-header {
    display: flex;
    justify-content: flex-start;
    background-color: var(--color-gray-dim);
    overflow-x: auto;
    scrollbar-width: thin;

    select {
      font-size: 1rem;
      border-radius: 0;
      background-color: var(--color-gray-dim);
    }
  }

  .output-content {
    position: relative;
    display: flex;
    flex: 1;
    overflow-y: auto;

    iframe {
      flex: 1;
      border: none;
    }
  }

  .output-content > .shiki {
    flex: 1;
    counter-reset: line-number;
    padding: 1rem 0.25rem;

    .line {
      position: relative;
      counter-increment: line-number;
      &::before {
        display: inline-flex;
        content: counter(line-number);
        padding-right: 1.625rem;
        width: 3ch;
        justify-content: right;
        color: #858585;
        user-select: none;
        font-feature-settings: "tnum";
        font-variant-numeric: tabular-nums;
      }
    }
  }
