client import { EditorView } from "@codemirror/view"
import type { PlaygroundFile } from "../../playground.marko";

client import extensions, { update } from "./codemirror-extensions";

export interface Input {
  files: PlaygroundFile[];
  filesChange?: (files: PlaygroundFile[]) => void;
  tabIndex?: number;
  tabIndexChange?: (tabIndex: number) => void;
}

let/files:=input.files
let/selected=(input.tabIndex || 0) valueChange=input.tabIndexChange
let/file=(files.at(selected) as PlaygroundFile) valueChange(newValue) {
  files = files.toSpliced(selected, 1, newValue);
}

tabs files:=files selected:=selected
.editor.shiki/$editor

lifecycle<{ editor?: EditorView, change?: boolean, set(v: string): void }>,
  ,set(content) {
    this.change = true;
    file = { ...file, content };
  }
  ,onMount() {
    this.editor = new EditorView({
      doc: file?.content,
      parent: $editor(),
      extensions: [
        EditorView.updateListener.of((update) => {
          if (update.docChanged) {
            this.set(update.state.doc.toString());
          }
        }),
        ...extensions,
      ],
    });
  }
  ,onUpdate() {
    if (this.change) {
      this.change = false;
    } else if (file) {
      update(
        this.editor!,
        file.content,
        file.path.slice(file.path.lastIndexOf(".") + 1),
      );
    }
  }
  ,onDestroy() {
    this.editor!.destroy();
  }

style --
  .editor, .cm-editor {
    height: 100%;
  }
  .cm-editor.cm-editor {
    font-size: 1rem;
    font-family: "Ubuntu Mono", monospace;
    padding: 1rem 0rem;
    counter-reset: line-number;
    .cm-activeLine {
      background-color: color-mix(in srgb, var(--color-blue-alt-dim), transparent);
    }
    .cm-cursor {
      border-left: 2px solid var(--color-foreground);
    }
    &.cm-focused .cm-selectionBackground, ::selection {
      background-color: unset !important;
    }
    .cm-line {
      position: relative;
      counter-increment: line-number;
      padding: 0.1rem 0.25rem;
      &::before {
        display: inline-flex;
        content: counter(line-number);
        padding-right: 1.625rem;
        width: 3ch;
        justify-content: right;
        color: #858585;
        user-select: none;
        font-feature-settings: "tnum";
        font-variant-numeric: tabular-nums;
      }
    }
  }
