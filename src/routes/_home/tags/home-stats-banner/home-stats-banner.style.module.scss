@use "app/styles/colors" as colors;

.section {
  @include colors.section("blue");

  background-color: var(--color-black);
  margin: 0 calc(-1 * var(--root-gap));
  overflow: hidden;
  white-space: nowrap;
  background-color: color-mix(
    in srgb,
    var(--section-color-dark),
    var(--color-black) 95%
  );
}

.accelerator {
  transform: translateX(0);
  transition: transform 0.3s ease-out;

  &:hover {
    transform: translateX(-4px);
  }
}

.marquee {
  display: flex;
  width: fit-content;
  font-size: 1.7rem;
  gap: 1rem;
  padding: 1.5rem 0;
  will-change: transform;
  animation: marquee 120s linear infinite;
  @keyframes marquee {
    to {
      transform: translateX(-50%);
    }
  }
  @media (prefers-reduced-motion: reduce) {
    animation-play-state: paused;
  }
  @media (min-width: 64rem) {
    font-size: 1.9rem;
    gap: 3rem;
    padding: 2rem 0;
  }

  &:hover {
    animation-play-state: paused;
  }
}

.link {
  position: relative;
  display: inline-flex;
  margin: 0 1rem;
  align-items: center;
  text-decoration: none;
  color: var(--color-white);
  border-bottom: 2px solid transparent;
  &:hover {
    border-bottom-color: currentColor;
  }
  svg {
    display: inline-block;
    height: 1.5lh;
    margin: 0 1ch;
    path {
      fill: currentColor;
    }
  }
}

.githubStars {
  counter-reset: stars calc(var(--stars) / 1000);
  font-variant-numeric: tabular-nums;
  &::before {
    content: "" counter(stars) "k ";
  }
}

.npmDownloads {
  counter-reset: downloads calc(var(--downloads) / 1000);
  font-variant-numeric: tabular-nums;
  &::before {
    content: " " counter(downloads) "k";
  }
}
