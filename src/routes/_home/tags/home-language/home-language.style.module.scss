@use "app/styles/colors" as colors;

.section {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 2rem;
  gap: 3rem;
  margin-bottom: 5.4rem;
  margin-left: var(--root-bleed);
  margin-right: var(--root-bleed);
  border-radius: 2rem;
  border: 3px solid transparent;
  background-origin: border-box;
  background-clip: padding-box, border-box;
  background-image:
    linear-gradient(var(--color-background), var(--color-background)),
    linear-gradient(0, var(--section-color), var(--section-color-alt));
  @include colors.section("red");

  @media (min-width: 48rem) {
    padding: 3rem;
    margin-bottom: 4.6rem;
  }
  @media (min-width: 64rem) {
    flex-direction: row;
    padding: 3rem 4rem;

    @media (prefers-color-scheme: light) {
      color: var(--color-white);
      background-image: linear-gradient(
        to bottom,
        var(--section-color-dark),
        var(--section-color-light)
      );
    }
  }
}

.content {
  display: flex;
  flex-direction: column;
  min-width: 100%;

  @media (min-width: 64rem) {
    min-width: auto;
    padding-right: 1rem;
  }

  h2 {
    font-size: max(2.8rem, min(3.3rem, 8dvw));
    margin-bottom: 1.5rem;
  }

  p {
    font-size: 1.1rem;
    margin: 1rem 0;
    max-width: 40rem;
  }
}

.headingText {
  display: inline-flex;
  background-clip: text;
  color: transparent;
  background-image: linear-gradient(
    to bottom,
    var(--section-color-dark),
    var(--section-color-light)
  );
  @media (prefers-color-scheme: light) and (min-width: 64rem) {
    background: none;
    color: var(--color-white);
  }
}

.cta {
  display: inline-flex;
  margin-top: 1.5rem;
  border-radius: 2rem;
  padding: 1rem 4rem;
  text-decoration: none;
  color: var(--color-white);
  background-color: var(--section-color);
  font-size: 1.1rem;
  font-weight: 500;
  justify-content: center;
  align-self: flex-start;
  justify-self: end;
  width: 100%;

  @media (prefers-color-scheme: dark) {
    color: var(--color-foreground);
    background: linear-gradient(
      to right,
      var(--section-color-dark),
      var(--section-color-light)
    );
  }

  @media (min-width: 30rem) {
    width: auto;
  }

  @media (min-width: 64rem) {
    padding: 0.8rem 2.4rem;
    @media (prefers-color-scheme: light) {
      color: var(--section-color-dark);
      background: var(--color-white);
    }
  }
}

.example {
  display: flex;
  position: relative;
  border-radius: 2rem;
  margin-bottom: -6.5rem;
  align-self: center;
  width: 100%;
  padding: 2rem 1.5rem;
  max-width: 30rem;
  border: 2px solid transparent;
  background-color: color-mix(
    in srgb,
    var(--color-black),
    var(--section-color-dark) 15%
  );
  @media (prefers-color-scheme: dark) {
    border-color: var(--section-color-dim);
  }
  &::before {
    position: absolute;
    inset: 0;
    z-index: -1;
    transform-origin: center;
    transform: scale(1, 0.9);
    content: "";
    background-color: var(--section-color-dim-alt);
    filter: blur(50px);
    opacity: 0.4;
  }
  @media (min-width: 32rem) {
    padding: 3rem;
  }

  @media (min-width: 54rem) {
    align-self: flex-end;
    margin-top: -6rem;
  }

  @media (min-width: 64rem) {
    margin-top: 0;
    align-self: flex-end;
    width: auto;
  }

  :global(.code-block) {
    width: 100%;
  }

  pre {
    padding: 0;
    overflow: hidden;
    border: none;
    background-color: transparent !important;
    font-size: max(0.8rem, min(1.5rem, 3.7dvw));
  }
}

.exampleOutput {
  display: flex;
  flex-direction: column;
  place-items: center;
  font-size: max(0.8rem, min(1.5rem, 3.7dvw));
  position: absolute;
  left: 0;
  right: 0;
  bottom: -0.8lh;

  > button {
    all: revert;
    font-size: 1rem;
    padding: 0.5rem;
    width: 100%;
    max-width: 10rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

    &:active,
    &.active {
      transform: translateY(2px) scale(0.99);
      box-shadow: 0 0 1px rgba(0, 0, 0, 0.1);
    }
  }

  .cursor {
    position: absolute;
    top: 10px;
    left: 50%;
    height: 35px;
    transform: translate(30px, 30px);
    opacity: 0;
    transition:
      transform 0.2s ease-in,
      opacity 0.1s 0.1s ease-in;
    pointer-events: none;
    &.visible {
      transform: translate(0, 0);
      opacity: 1;
      transition:
        transform 0.2s ease-out,
        opacity 0.1s ease-out;
    }
  }
}
